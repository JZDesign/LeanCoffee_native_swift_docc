{"variants":[{"paths":["\/tutorials\/leancoffeeapp\/list-view"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create the list view of all the Lean Coffee Events and learn about Dependency Injection with SwiftUI."}]}],"estimatedTimeInMinutes":35,"title":"Create the List View and understand Swift's flavor of Dependency Injection","image":"coffee-beans.png","chapter":"Lists and Dependencies","kind":"hero","backgroundImage":"coffee-beans.png"},{"kind":"tasks","tasks":[{"anchor":"A-laundry-list-of-things-to-do.","title":"A laundry list of things to do.","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Here we‚Äôll create the ‚ÄúHome View‚Äù of the application. This is the primary view that will display the list of Lean Coffee events to the user."}]}],"mediaPosition":"trailing","media":"swift.png"}],"stepsSection":[{"code":"LeanCoffeeModels.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The very first thing we‚Äôll do in this chapter is lay out the LeanCoffee model we‚Äôll need to create this view. You find the api docs "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/JZDesign\/LeanCoffeeService"},{"type":"text","text":". In those docs you‚Äôll see the json response models for a "},{"type":"codeVoice","code":"LeanCoffee"},{"type":"text","text":", a "},{"type":"codeVoice","code":"Topic"},{"type":"text","text":", and a "},{"type":"codeVoice","code":"Vote"},{"type":"text","text":" among others."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new file named "},{"type":"codeVoice","code":"Models.swift"},{"type":"text","text":" and copy the model there. An important thing to note is the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/identifiable"},{"type":"text","text":" protocol on the struct. This is a protocol that SwiftUI uses to optmize the way a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/list\/"},{"type":"text","text":" works."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"HomeView1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"With that in place, let‚Äôs create a new file named "},{"type":"codeVoice","code":"HomeView.swift"},{"type":"text","text":". The body content will be a "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":", which is a view SwiftUI provides out of the box to handle some basic navigation for us."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding a title to the content of the "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" applies that large title text in the view that you see in the preview. It also acts as the back button text if there is a presented view on the navigation stack. For more information about "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" you can read the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/navigationview"}]}],"type":"step","runtimePreview":"HomeView1.png","media":null},{"code":"HomeView2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The primary content of this view will be a list. Lists need an array of identifiable data to be easily created. So, we‚Äôll mock out some lean coffee data to create our list."}]}],"caption":[],"type":"step","runtimePreview":"HomeView2.png","media":null},{"code":"HomeView3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we can make each row a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/navigationlink"},{"type":"text","text":" that will allow the user to tap it and bring them to a detail view about that row content."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is really the core of this view. Now we need to populate it with some data. Let‚Äôs go make a presenter for the home view that will fetch these lean coffee events for us."}]}],"type":"step","runtimePreview":"HomeView3.png","media":null},{"code":"HomePresenter1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Looking at the "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/JZDesign\/LeanCoffeeService#get-all-lean-coffee-events"},{"type":"text","text":" on the endpoint we‚Äôll use to get the lean coffee events, it shows that the access token is required. So we need to include it as part of this presenter."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"HomePresenter2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an async function named "},{"type":"codeVoice","code":"refreshEvents"},{"type":"text","text":" and a local published variable to hold the result of the request."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"HomePresenter3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we can create the authorization header and make the call inside of "},{"type":"codeVoice","code":"refreshEvents"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"And that‚Äôs about it!"}]}],"type":"step","runtimePreview":null,"media":null},{"code":"HomeView3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let‚Äôs go back to the view."}]}],"caption":[],"type":"step","runtimePreview":"HomeView3.png","media":null},{"code":"HomeView7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First, we need to delete the mock data. Then, add an initialzer that takes in the access token so we can create the presenter. Next, we need to update the list initializer to use the presenter."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To load the data, there is a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" function on view that will execute when the view appears. Task is meant to call asynchronous functions and will cancel tasks if the view is dismissed automatically "},{"type":"emphasis","inlineContent":[{"type":"text","text":"(this is overhead that we would have to manage otherwise)"}]},{"type":"text","text":"."}]}],"type":"step","runtimePreview":"HomeView5-8.png","media":null},{"code":"HomeView8-1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We will also call the same function from "},{"type":"codeVoice","code":"refreshable"},{"type":"text","text":". Adding the refreshable function automatically adds the pull to refresh functionality to the list! üî•‚òùÔ∏è"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You may have noticed in the "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/JZDesign\/LeanCoffeeService"},{"type":"text","text":" that there are other endpoints "},{"type":"emphasis","inlineContent":[{"type":"text","text":"(a lot of them)"}]},{"type":"text","text":" that require the access token. Passing it around like this is probably not the right choice. Scroll down to the next section to learn about Dependency Injection in SwiftUI."}]}],"type":"step","runtimePreview":"HomeView5-8.png","media":null}]},{"anchor":"Dependency-injection","title":"Dependency injection","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You‚Äôve actually already seen and used different forms of Dependency Injection in this project. One is called "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Dependency_injection#Constructor_injection"},{"type":"text","text":", this is where we create a ‚Äúclient‚Äù object and pass in another ‚Äúservice‚Äù object the client "},{"type":"emphasis","inlineContent":[{"type":"text","text":"depends"}]},{"type":"text","text":" on to do its work. Take a look at the relationship between the "},{"type":"codeVoice","code":"AsyncView"},{"type":"text","text":" and the "},{"type":"codeVoice","code":"Presenter"},{"type":"text","text":". This is a prime example of Constructor Injection."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The kind of Dependency Injection we‚Äôre going to focus on here is referred to as "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Dependency_injection#Setter_injection"},{"type":"text","text":". We tell the DI framework that we want something named X that has a desired interface, but we don‚Äôt actually create the thing ourselves in the client object. Instead it is created outside of the usage site and injected when requested."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apple introduced native Setter Injection with SwiftUI! To prevent ourselves from passing around the access token to every new view\/presenter we create, we‚Äôll use this feature."}]}],"mediaPosition":"trailing","media":"swift.png"}],"stepsSection":[{"code":"EnvironmentExample.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whenever we access an ‚ÄúEnvironment‚Äù variable or object, we‚Äôre utilizing Swift‚Äôs provided setter injection framework."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can create our own Environment variables like the "},{"type":"codeVoice","code":"colorScheme"},{"type":"text","text":". Or we can create Environment Objects and pass them into the application explicitly. We‚Äôll start with the latter."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TokenStore.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First we‚Äôre going to create our "},{"type":"codeVoice","code":"TokenStore"},{"type":"text","text":". This will need to be an "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"LeanCoffeeiOSApp1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we need to find the app file."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"LeanCoffeeiOSApp2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Here, we initialize the "},{"type":"codeVoice","code":"TokenStore"},{"type":"text","text":" as a "},{"type":"codeVoice","code":"@StateObject"},{"type":"text","text":", then we inject the object to the root level view using the "},{"type":"codeVoice","code":".enviornmentObject"},{"type":"text","text":" view modifier."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"And that is all it takes to set up a dependency for injection! Now we need to use it."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"SignInPresenter3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the "},{"type":"codeVoice","code":"SignInPresenter"},{"type":"text","text":". This is the first place where the access token in used."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"SignInPresenter4-crash.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If we replace "},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":" with the reference to our token store, and update the code where we assign the value, all seems to work fine. However, if you launch the application and try to sign in, you‚Äôll notice the app crash with an error message like the one you see on the upper right."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/stackoverflow.com\/a\/69238617\/9333764"},{"type":"text","text":" that doing dependency injection with an "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" is explicitly meant for SwiftUI views. Nothing else. We could move this into the SignInView and pass it to the presenter, but that‚Äôs more ceremony than I‚Äôd like. We‚Äôll do it the other way."}]}],"type":"step","runtimePreview":"crash.png","media":null},{"code":"LeanCoffeeiOSApp1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before we go and create the keypath we need to set the token store as an environment variable, lets remove the token store references in the app file."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TokenStore.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then open up the "},{"type":"codeVoice","code":"TokenStore"},{"type":"text","text":" file again. We‚Äôll do the rest of the work here."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TokenStore2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When we use the "},{"type":"codeVoice","code":"colorScheme"},{"type":"text","text":" environment variable, we locate it using a "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.swiftbysundell.com\/tips\/passing-key-paths-as-functions\/"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is done using an "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentkey"},{"type":"text","text":". The first step is to create the key and its default value."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TokenStore3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we need to register the token store to the key path on the environment. We do so by defining a custom getter that references the key path. Then a custom setter so we can modify the value at the injection site."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, like we injected the enviornment object in step 4, we can override the stored value at a specific usage site with the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/environment(_:_:)"},{"type":"text","text":" view modifier. This allows us to inject a one off instance of an environment variable to a particular view if we need to."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"SignInPresenter4-nope.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let‚Äôs go back to the presenter so we can make the necessary changes."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"SignInPresenter4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All we need to do here is change the injection point to the key path reference and we‚Äôre done!"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you try and sign in now, you should have no problems."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"HomePresenter3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that we‚Äôve got that working, lets go to the "},{"type":"codeVoice","code":"HomePresenter"},{"type":"text","text":" and inject the access token there."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"HomePresenter4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since the value is optional, we need to either unwrap the value and respond to it being nil, or provide a fallback value like we do here."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you‚Äôre up for the challenge, write a "},{"type":"codeVoice","code":"guard"},{"type":"text","text":" statement that throws an error if the access token is nil."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"HomeView8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we‚Äôve got work to do in the HomeView."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"HomeView9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove the initializer for and create the observed object presenter and we‚Äôre done!"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don‚Äôt forget to go change the "},{"type":"codeVoice","code":"SignInView"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SignUpView"},{"type":"text","text":" to present this view instead of that placeholder one."}]}],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"The Lean Coffee View","abstract":[{"type":"text","text":"Learn how to crate custom list rows with swipe actions, sorting, and more."}]}],"identifier":{"url":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Create the List View and understand Swift's flavor of Dependency Injection","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"Lean Coffee - iOS"},"hierarchy":{"modules":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Getting-started-with-SwiftUI","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started#Your-first-SwiftUI-View"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Authentication","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-in-View"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-Up-View"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/The-Presenter-Pattern","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#A-basic-Presenter"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#The-Sign-In-Presenter"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Loading-and-Errors","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#A-Loading-View"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#The-AsyncView"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Lists-and-Dependencies","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#A-laundry-list-of-things-to-do."},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#Dependency-injection"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/In-the-Topics","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-View"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-Presenter"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Create-New-Events-and-Topics","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Form-Submissions"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Lean-Coffee"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Topic"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#You-did-it!-%F0%9F%94%A5%E2%98%9D%EF%B8%8F"}]}]}],"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Lists-and-Dependencies"]]},"references":{"SignInPresenter4-crash.swift":{"syntax":"swift","content":["import SwiftUI","","class SignInPresenter: Presenter {","    @EnvironmentObject var tokenStore: TokenStore","    ","    @Published var username = \"\"","    @Published var password = \"\"","    ","    func submitForm() async {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        ","        await perform {","            self.tokenStore.accessToken = try await HttpClient()","                .post(","                    decodeReponse: AccessToken.self,","                    url: rootURL + \"\/users\/login\",","                    withHeaders: header","                )","        }","    }","}"],"fileName":"SignInPresenter.swift","identifier":"SignInPresenter4-crash.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":17},{"line":22}]},"HomeView8.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomeView: View {","    ","    @ObservedObject var presenter: HomePresenter","    ","    init(_ accessToken: AccessToken) {","        self.presenter = HomePresenter(accessToken)","    }","","    var body: some View {","        NavigationView {","            List(presenter.events) { leanCoffee in","                NavigationLink(destination: {","                    Text(\"You navigated to lean coffee: \\(leanCoffee.id)\")","                }) {","                    Text(leanCoffee.title)","                }","            }.navigationTitle(Text(\"Lean Coffee\"))","        }","        .toAsyncView(presenter)","        .task {","            await presenter.refreshEvents()","        }","        .refreshable {","            await presenter.refreshEvents()","        }","    }","}"],"fileName":"HomeView.swift","identifier":"HomeView8.swift","type":"file","fileType":"swift","highlights":[]},"HomeView1.png":{"alt":"A view","type":"image","identifier":"HomeView1.png","variants":[{"url":"\/images\/HomeView1.png","traits":["1x","light"]}]},"SignInPresenter4-nope.swift":{"syntax":"swift","content":["import SwiftUI","","class SignInPresenter: Presenter {","    @EnvironmentObject var tokenStore: TokenStore","    ","    @Published var username = \"\"","    @Published var password = \"\"","    ","    func submitForm() async {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        ","        await perform {","            self.tokenStore.accessToken = try await HttpClient()","                .post(","                    decodeReponse: AccessToken.self,","                    url: rootURL + \"\/users\/login\",","                    withHeaders: header","                )","        }","    }","}"],"fileName":"SignInPresenter.swift","identifier":"SignInPresenter4-nope.swift","type":"file","fileType":"swift","highlights":[]},"TokenStore2.swift":{"syntax":"swift","content":["import SwiftUI","","class TokenStore: ObservableObject {","    var accessToken: AccessToken? = nil","}","","struct TokenStoreKey: EnvironmentKey {","    static let defaultValue: TokenStore = .init()","}",""],"fileName":"TokenStore.swift","identifier":"TokenStore2.swift","type":"file","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10}]},"https://stackoverflow.com/a/69238617/9333764":{"title":"Turns out","titleInlineContent":[{"type":"text","text":"Turns out"}],"type":"link","identifier":"https:\/\/stackoverflow.com\/a\/69238617\/9333764","url":"https:\/\/stackoverflow.com\/a\/69238617\/9333764"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents":{"role":"overview","title":"Lean Coffee","abstract":[{"type":"text","text":"Create a Lean Coffee app for iOS! Create lean coffee events, topics, and votes without the pens or sticky notes!"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-table-of-contents"},"HomeView8-1.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomeView: View {","    ","    @ObservedObject var presenter: HomePresenter","    ","    init(_ accessToken: AccessToken) {","        self.presenter = HomePresenter(accessToken)","    }","","    var body: some View {","        NavigationView {","            List(presenter.events) { leanCoffee in","                NavigationLink(destination: {","                    Text(\"You navigated to lean coffee: \\(leanCoffee.id)\")","                }) {","                    Text(leanCoffee.title)","                }","            }.navigationTitle(Text(\"Lean Coffee\"))","        }","        .toAsyncView(presenter)","        .task {","            await presenter.refreshEvents()","        }","        .refreshable {","            await presenter.refreshEvents()","        }","    }","}"],"fileName":"HomeView.swift","identifier":"HomeView8-1.swift","type":"file","fileType":"swift","highlights":[{"line":25},{"line":26},{"line":27}]},"https://developer.apple.com/documentation/swiftui/environmentkey":{"title":"environment key","titleInlineContent":[{"type":"text","text":"environment key"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentkey","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentkey"},"LeanCoffeeiOSApp1.swift":{"syntax":"swift","content":["import SwiftUI","","@main","struct LeanCoffeeiOSApp: App {","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","    }","}"],"fileName":"LeanCoffeeiOSApp.swift","identifier":"LeanCoffeeiOSApp1.swift","type":"file","fileType":"swift","highlights":[]},"LeanCoffeeModels.swift":{"syntax":"swift","content":["import SwiftUI","","struct LeanCoffee: Codable, Identifiable {","    let id: String","    let title: String","    let date: String","}"],"fileName":"Models.swift","identifier":"LeanCoffeeModels.swift","type":"file","fileType":"swift","highlights":[]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#Form-Submissions":{"role":"pseudoSymbol","title":"Form Submissions","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Form-Submissions","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#Form-Submissions"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Create-New-Events-and-Topics":{"role":"article","title":"Create New Events and Topics","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Create-New-Events-and-Topics","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/create-new-events-and-topics"},"swift.png":{"alt":"swift logo","type":"image","identifier":"swift.png","variants":[{"url":"\/images\/swift.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Sign-in-and-Sign-up#Creating-the-Sign-Up-View":{"role":"pseudoSymbol","title":"Creating the Sign Up View","abstract":[{"type":"text","text":"Use the view from Chapter 1 to present a Sign in or Sign up form and log a user into the application."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-Up-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/sign-in-and-sign-up#Creating-the-Sign-Up-View"},"HomeView2.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomeView: View {","","    let events = [","        LeanCoffee(id: \"1\", title: \"This is Test\", date: \"123\"),","        LeanCoffee(id: \"2\", title: \"This is Test\", date: \"123\"),","        LeanCoffee(id: \"3\", title: \"This is Test\", date: \"123\")","    ]","","    var body: some View {","        NavigationView {","            List(events) { leanCoffee in","                Text(leanCoffee.title)","            }.navigationTitle(Text(\"Lean Coffee\"))","        }","    }","}"],"fileName":"HomeView.swift","identifier":"HomeView2.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":13},{"line":14},{"line":15}]},"https://www.swiftbysundell.com/tips/passing-key-paths-as-functions/":{"title":"key path","titleInlineContent":[{"type":"text","text":"key path"}],"type":"link","identifier":"https:\/\/www.swiftbysundell.com\/tips\/passing-key-paths-as-functions\/","url":"https:\/\/www.swiftbysundell.com\/tips\/passing-key-paths-as-functions\/"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Sign-in-and-Sign-up":{"role":"project","title":"Sign in and Sign up","estimatedTime":"20min","abstract":[{"type":"text","text":"Use the view from Chapter 1 to present a Sign in or Sign up form and log a user into the application."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/sign-in-and-sign-up"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/List-View#Dependency-injection":{"role":"pseudoSymbol","title":"Dependency injection","abstract":[{"type":"text","text":"Create the list view of all the Lean Coffee Events and learn about Dependency Injection with SwiftUI."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#Dependency-injection","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/list-view#Dependency-injection"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/List-View#A-laundry-list-of-things-to-do.":{"role":"pseudoSymbol","title":"A laundry list of things to do.","abstract":[{"type":"text","text":"Create the list view of all the Lean Coffee Events and learn about Dependency Injection with SwiftUI."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#A-laundry-list-of-things-to-do.","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/list-view#A-laundry-list-of-things-to-do."},"TokenStore3.swift":{"syntax":"swift","content":["import SwiftUI","","class TokenStore: ObservableObject {","    var accessToken: AccessToken? = nil","}","","extension EnvironmentValues {","    var tokenStore: TokenStore {","        get { self[TokenStoreKey.self] }","        set { self[TokenStoreKey.self] = newValue }","    }","}","","struct TokenStoreKey: EnvironmentKey {","    static let defaultValue: TokenStore = .init()","}",""],"fileName":"TokenStore.swift","identifier":"TokenStore3.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Loading-and-Errors#A-Loading-View":{"role":"pseudoSymbol","title":"A Loading View","abstract":[{"type":"text","text":"There‚Äôs nothing worse than an app that doesn‚Äôt show loading states or errors‚Ä¶"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#A-Loading-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/loading-and-errors#A-Loading-View"},"https://developer.apple.com/documentation/swiftui/view/environment(_:_:)":{"title":".environment","titleInlineContent":[{"type":"codeVoice","code":".environment"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/environment(_:_:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/environment(_:_:)"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Getting-Started":{"role":"project","title":"Your first SwiftUI View","estimatedTime":"15min","abstract":[{"type":"text","text":"Create the landing page of the Lean Coffee application supporting iPhone, iPad, and darkmode."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/getting-started"},"https://developer.apple.com/documentation/swiftui/navigationview":{"title":"SwiftUI Documentation","titleInlineContent":[{"type":"text","text":"SwiftUI Documentation"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/navigationview","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/navigationview"},"SignInPresenter4.swift":{"syntax":"swift","content":["import SwiftUI","","class SignInPresenter: Presenter {","    @Environment(\\.tokenStore) var tokenStore: TokenStore","    ","    @Published var username = \"\"","    @Published var password = \"\"","    ","    func submitForm() async {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        ","        await perform {","            self.tokenStore.accessToken = try await HttpClient()","                .post(","                    decodeReponse: AccessToken.self,","                    url: rootURL + \"\/users\/login\",","                    withHeaders: header","                )","        }","    }","}"],"fileName":"SignInPresenter.swift","identifier":"SignInPresenter4.swift","type":"file","fileType":"swift","highlights":[{"line":4}]},"HomePresenter2.swift":{"syntax":"swift","content":["import SwiftUI","","class HomePresenter: Presenter {","    let accessToken: AccessToken","    ","    @Published var events: [LeanCoffee] = []","","    init(_ accessToken: AccessToken) {","        self.accessToken = accessToken","    }","    ","    func refreshEvents() async {","        ","    }","}"],"fileName":"HomePresenter.swift","identifier":"HomePresenter2.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6},{"line":11},{"line":12},{"line":13},{"line":14}]},"https://github.com/JZDesign/LeanCoffeeService":{"title":"api documentation","titleInlineContent":[{"type":"text","text":"api documentation"}],"type":"link","identifier":"https:\/\/github.com\/JZDesign\/LeanCoffeeService","url":"https:\/\/github.com\/JZDesign\/LeanCoffeeService"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#Creating-a-Topic":{"role":"pseudoSymbol","title":"Creating a Topic","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Topic","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#Creating-a-Topic"},"HomePresenter4.swift":{"syntax":"swift","content":["import SwiftUI","","class HomePresenter: Presenter {","    @Environment(\\.tokenStore) var tokenStore: TokenStore","    ","    @Published var events: [LeanCoffee] = []","    ","    func refreshEvents() async {","        await perform {","            let header = [\"Authorization\": \"Bearer \\(self.tokenStore.accessToken?.value ?? \"\")\"]","            ","            self.events = try await HttpClient()","                .get(","                    decodeReponse: [LeanCoffee].self,","                    url: rootURL + \"\/leancoffee\",","                    withHeaders: header","                )","        }","    }","}"],"fileName":"HomePresenter.swift","identifier":"HomePresenter4.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":10}]},"https://en.wikipedia.org/wiki/Dependency_injection#Constructor_injection":{"title":"Constructor Injection","titleInlineContent":[{"type":"text","text":"Constructor Injection"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Dependency_injection#Constructor_injection","url":"https:\/\/en.wikipedia.org\/wiki\/Dependency_injection#Constructor_injection"},"https://developer.apple.com/documentation/swiftui/list/":{"title":"List","titleInlineContent":[{"type":"codeVoice","code":"List"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/list\/","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/list\/"},"HomeView2.png":{"alt":"A view","type":"image","identifier":"HomeView2.png","variants":[{"url":"\/images\/HomeView2.png","traits":["1x","light"]}]},"EnvironmentExample.swift":{"syntax":"swift","content":["import SwiftUI","","struct ExampleView: View {","    ","    @EnvironmentObject var tokenStore: TokenStore","    @Environment(\\.colorScheme) var colorScheme : ColorScheme","    ","    var body: some View {","        EmptyView()","    }","}"],"fileName":"EnvironmentExample.swift","identifier":"EnvironmentExample.swift","type":"file","fileType":"swift","highlights":[]},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/In-the-Topics":{"role":"article","title":"In the Topics","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/In-the-Topics","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/in-the-topics"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Getting-Started#Your-first-SwiftUI-View":{"role":"pseudoSymbol","title":"Your first SwiftUI View","abstract":[{"type":"text","text":"Create the landing page of the Lean Coffee application supporting iPhone, iPad, and darkmode."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started#Your-first-SwiftUI-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/getting-started#Your-first-SwiftUI-View"},"https://github.com/JZDesign/LeanCoffeeService#get-all-lean-coffee-events":{"title":"documentation","titleInlineContent":[{"type":"text","text":"documentation"}],"type":"link","identifier":"https:\/\/github.com\/JZDesign\/LeanCoffeeService#get-all-lean-coffee-events","url":"https:\/\/github.com\/JZDesign\/LeanCoffeeService#get-all-lean-coffee-events"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Sign-in-and-Sign-up#Creating-the-Sign-in-View":{"role":"pseudoSymbol","title":"Creating the Sign in View","abstract":[{"type":"text","text":"Use the view from Chapter 1 to present a Sign in or Sign up form and log a user into the application."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-in-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/sign-in-and-sign-up#Creating-the-Sign-in-View"},"TokenStore.swift":{"syntax":"swift","content":["import SwiftUI","","class TokenStore: ObservableObject {","    var accessToken: AccessToken? = nil","}"],"fileName":"TokenStore.swift","identifier":"TokenStore.swift","type":"file","fileType":"swift","highlights":[]},"https://developer.apple.com/documentation/swift/identifiable":{"title":"Identifiable","titleInlineContent":[{"type":"codeVoice","code":"Identifiable"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/identifiable","url":"https:\/\/developer.apple.com\/documentation\/swift\/identifiable"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Loading-and-Errors#The-AsyncView":{"role":"pseudoSymbol","title":"The AsyncView","abstract":[{"type":"text","text":"There‚Äôs nothing worse than an app that doesn‚Äôt show loading states or errors‚Ä¶"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#The-AsyncView","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/loading-and-errors#The-AsyncView"},"HomeView3.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomeView: View {","","    let events = [","        LeanCoffee(id: \"1\", title: \"This is Test\", date: \"123\"),","        LeanCoffee(id: \"2\", title: \"This is Test\", date: \"123\"),","        LeanCoffee(id: \"3\", title: \"This is Test\", date: \"123\")","    ]","","    var body: some View {","        NavigationView {","            List(events) { leanCoffee in","                NavigationLink(destination: {","                    Text(\"You navigated to lean coffee: \\(leanCoffee.id)\")","                }) {","                    Text(leanCoffee.title)","                }","            }.navigationTitle(Text(\"Lean Coffee\"))","        }","    }","}"],"fileName":"HomeView.swift","identifier":"HomeView3.swift","type":"file","fileType":"swift","highlights":[]},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Lists-and-Dependencies":{"role":"article","title":"Lists and Dependencies","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Lists-and-Dependencies","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/lists-and-dependencies"},"https://en.wikipedia.org/wiki/Dependency_injection#Setter_injection":{"title":"Setter Injection","titleInlineContent":[{"type":"text","text":"Setter Injection"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Dependency_injection#Setter_injection","url":"https:\/\/en.wikipedia.org\/wiki\/Dependency_injection#Setter_injection"},"https://developer.apple.com/documentation/swiftui/navigationlink":{"title":"NavigationLink","titleInlineContent":[{"type":"codeVoice","code":"NavigationLink"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/navigationlink","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/navigationlink"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#You-did-it!-%F0%9F%94%A5%E2%98%9D%EF%B8%8F":{"role":"pseudoSymbol","title":"You did it! üî•‚òùÔ∏è","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#You-did-it!-%F0%9F%94%A5%E2%98%9D%EF%B8%8F","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#You-did-it!-%25F0%259F%2594%25A5%25E2%2598%259D%25EF%25B8%258F"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Presenter#A-basic-Presenter":{"role":"pseudoSymbol","title":"A basic Presenter","abstract":[{"type":"text","text":"In this chapter we‚Äôll refactor the Sign in and Sign up views to use the Presenter pattern. This will allow us to reuse some of the code, and pull the business logic out of the view."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#A-basic-Presenter","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/presenter#A-basic-Presenter"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#Creating-a-Lean-Coffee":{"role":"pseudoSymbol","title":"Creating a Lean Coffee","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Lean-Coffee","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#Creating-a-Lean-Coffee"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Authentication":{"role":"article","title":"Authentication","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Authentication","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/authentication"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Loading-and-Errors":{"role":"article","title":"Loading and Errors","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Loading-and-Errors","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/loading-and-errors"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/The-Presenter-Pattern":{"role":"article","title":"The Presenter Pattern","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/The-Presenter-Pattern","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/the-presenter-pattern"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Presenter":{"role":"project","title":"The Presenter Pattern","estimatedTime":"35min","abstract":[{"type":"text","text":"In this chapter we‚Äôll refactor the Sign in and Sign up views to use the Presenter pattern. This will allow us to reuse some of the code, and pull the business logic out of the view."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/presenter"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/List-View":{"role":"project","title":"Create the List View and understand Swift's flavor of Dependency Injection","estimatedTime":"35min","abstract":[{"type":"text","text":"Create the list view of all the Lean Coffee Events and learn about Dependency Injection with SwiftUI."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/list-view"},"HomeView5-8.png":{"alt":"A view","type":"image","identifier":"HomeView5-8.png","variants":[{"url":"\/images\/HomeView5-8.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Lean-Coffee-Topics":{"role":"project","title":"The Lean Coffee View","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"Learn how to crate custom list rows with swipe actions, sorting, and more."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/lean-coffee-topics"},"HomePresenter1.swift":{"syntax":"swift","content":["import SwiftUI","","class HomePresenter: Presenter {","    let accessToken: AccessToken","","    init(_ accessToken: AccessToken) {","        self.accessToken = accessToken","    }","}"],"fileName":"HomePresenter.swift","identifier":"HomePresenter1.swift","type":"file","fileType":"swift","highlights":[]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Loading-and-Errors":{"role":"project","title":"Loading and Errors","estimatedTime":"25min","abstract":[{"type":"text","text":"There‚Äôs nothing worse than an app that doesn‚Äôt show loading states or errors‚Ä¶"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/loading-and-errors"},"HomeView7.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomeView: View {","    ","    @ObservedObject var presenter: HomePresenter","    ","    init(_ accessToken: AccessToken) {","        self.presenter = HomePresenter(accessToken)","    }","","    var body: some View {","        NavigationView {","            List(presenter.events) { leanCoffee in","                NavigationLink(destination: {","                    Text(\"You navigated to lean coffee: \\(leanCoffee.id)\")","                }) {","                    Text(leanCoffee.title)","                }","            }.navigationTitle(Text(\"Lean Coffee\"))","        }","        .toAsyncView(presenter)","        .task {","            await presenter.refreshEvents()","        }","    }","}"],"fileName":"HomeView.swift","identifier":"HomeView7.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":13},{"line":21},{"line":22},{"line":23},{"line":24}]},"HomePresenter3.swift":{"syntax":"swift","content":["import SwiftUI","","class HomePresenter: Presenter {","    let accessToken: AccessToken","    ","    @Published var events: [LeanCoffee] = []","","    init(_ accessToken: AccessToken) {","        self.accessToken = accessToken","    }","    ","    func refreshEvents() async {","        await perform {","            let header = [\"Authorization\": \"Bearer \\(self.accessToken.value)\"]","            ","            self.events = try await HttpClient()","                .get(","                    decodeReponse: [LeanCoffee].self,","                    url: rootURL + \"\/leancoffee\",","                    withHeaders: header","                )","        }","    }","}"],"fileName":"HomePresenter.swift","identifier":"HomePresenter3.swift","type":"file","fileType":"swift","highlights":[]},"HomeView1.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomeView: View {","    var body: some View {","        NavigationView {","            Text(\"The lean coffee events will go here.\")","                .navigationTitle(Text(\"Lean Coffee\"))","        }","    }","}"],"fileName":"HomeView.swift","identifier":"HomeView1.swift","type":"file","fileType":"swift","highlights":[]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Presenter#The-Sign-In-Presenter":{"role":"pseudoSymbol","title":"The Sign In Presenter","abstract":[{"type":"text","text":"In this chapter we‚Äôll refactor the Sign in and Sign up views to use the Presenter pattern. This will allow us to reuse some of the code, and pull the business logic out of the view."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#The-Sign-In-Presenter","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/presenter#The-Sign-In-Presenter"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics":{"role":"project","title":"Let there be Coffee","estimatedTime":"45min","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics"},"LeanCoffeeiOSApp2.swift":{"syntax":"swift","content":["import SwiftUI","","@main","struct LeanCoffeeiOSApp: App {","    @StateObject var tokenStore = TokenStore()","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","                .environmentObject(tokenStore)","        }","    }","}"],"fileName":"LeanCoffeeiOSApp.swift","identifier":"LeanCoffeeiOSApp2.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":10}]},"SignInPresenter3.swift":{"syntax":"swift","content":["import SwiftUI","","class SignInPresenter: Presenter {    ","    @Published var username = \"\"","    @Published var password = \"\"","    @Published var accessToken = \"\"","    ","    func submitForm() async {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        ","        await perform {","            self.accessToken = try await HttpClient()","                .post(","                    decodeReponse: AccessToken.self,","                    url: rootURL + \"\/users\/login\",","                    withHeaders: header","                ).value","        }","    }","}"],"fileName":"SignInPresenter.swift","identifier":"SignInPresenter3.swift","type":"file","fileType":"swift","highlights":[]},"HomeView9.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomeView: View {","    ","    @ObservedObject var presenter = HomePresenter()","","    var body: some View {","        NavigationView {","            List(presenter.events) { leanCoffee in","                NavigationLink(destination: {","                    Text(\"You navigated to lean coffee: \\(leanCoffee.id)\")","                }) {","                    Text(leanCoffee.title)","                }","            }.navigationTitle(Text(\"Lean Coffee\"))","        }","        .toAsyncView(presenter)","        .task {","            await presenter.refreshEvents()","        }","        .refreshable {","            await presenter.refreshEvents()","        }","    }","}"],"fileName":"HomeView.swift","identifier":"HomeView9.swift","type":"file","fileType":"swift","highlights":[{"line":5}]},"coffee-beans.png":{"alt":"Coffee Beans","type":"image","identifier":"coffee-beans.png","variants":[{"url":"\/images\/coffee-beans.png","traits":["1x","light"]}]},"HomeView3.png":{"alt":"A view","type":"image","identifier":"HomeView3.png","variants":[{"url":"\/images\/HomeView3.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Lean-Coffee-Topics#Creating-the-Lean-Coffee-View":{"role":"pseudoSymbol","title":"Creating the Lean Coffee View","abstract":[{"type":"text","text":"Learn how to crate custom list rows with swipe actions, sorting, and more."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/lean-coffee-topics#Creating-the-Lean-Coffee-View"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Getting-started-with-SwiftUI":{"role":"article","title":"Getting started with SwiftUI","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Getting-started-with-SwiftUI","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/getting-started-with-swiftui"},"crash.png":{"alt":"A crash log","type":"image","identifier":"crash.png","variants":[{"url":"\/images\/crash.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Lean-Coffee-Topics#Creating-the-Lean-Coffee-Presenter":{"role":"pseudoSymbol","title":"Creating the Lean Coffee Presenter","abstract":[{"type":"text","text":"Learn how to crate custom list rows with swipe actions, sorting, and more."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-Presenter","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/lean-coffee-topics#Creating-the-Lean-Coffee-Presenter"}}}