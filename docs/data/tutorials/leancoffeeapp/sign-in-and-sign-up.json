{"variants":[{"paths":["\/tutorials\/leancoffeeapp\/sign-in-and-sign-up"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the view from Chapter 1 to present a Sign in or Sign up form and log a user into the application."}]}],"estimatedTimeInMinutes":20,"title":"Sign in and Sign up","image":"coffee-beans.png","chapter":"Authentication","kind":"hero","backgroundImage":"coffee-beans.png"},{"kind":"tasks","tasks":[{"anchor":"Creating-the-Sign-in-View","title":"Creating the Sign in View","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We‚Äôll start with creating the sign in view. This view will collect a user id and password and reach out to the api to sign the user in."}]}],"mediaPosition":"trailing","media":"swift.png"}],"stepsSection":[{"code":"SignInView1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a file called "},{"type":"codeVoice","code":"SignInView.swift"},{"type":"text","text":" and put the VStack with the following text in the body."}]}],"caption":[],"type":"step","runtimePreview":"signInView1.png","media":null},{"code":"SignInView2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We‚Äôll style the text to make it bold to catch the user‚Äôs attention."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we‚Äôll need to add 2 state variables to handle the form we‚Äôre about to create."}]}],"type":"step","runtimePreview":"signInView2.png","media":null},{"code":"SignInView3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, add a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/textfield"},{"type":"text","text":" to handle the username and a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/securefield"},{"type":"text","text":" to handle the password. To center the form, we‚Äôll surround the fields with 2 "},{"type":"codeVoice","code":"Spacer"},{"type":"text","text":" views."}]}],"caption":[],"type":"step","runtimePreview":"signInView3.png","media":null},{"code":"SignInView4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, we need a button to submit the form, and we should probably inset the contents of this view a little with "},{"type":"codeVoice","code":"padding"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order for this button to work we need to create a function that will handle the sign in of the user. After the sign in is complete, the api will return an "},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":" for future requests made to the api on behalf of the user. Let‚Äôs get to it!"}]}],"type":"step","runtimePreview":"signInView4-6.png","media":null},{"code":"SignInView5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This api uses basic authentication, so what we‚Äôll need to do is create the authorization header ourselves."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"That header is comprised of the username and password, separated by a colon, then "},{"type":"codeVoice","code":"base64"},{"type":"text","text":" encoded like so:"}]}],"type":"step","runtimePreview":"signInView4-6.png","media":null},{"code":"SignInView5-accessToken.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The result of a successful sign in is an accessToken which we‚Äôll need later. For now, we‚Äôll use another state variable to store it."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The access token comes back in the json, and ironically it‚Äôs keyed ‚Äúvalue‚Äù‚Ä¶ That was an oversight on my part üòÇü§£ Swift has a protocol we can use to serialize the json into a usable structure. Let‚Äôs make an "},{"type":"codeVoice","code":"AccessToken"},{"type":"text","text":" struct that adheres to the "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" protocol."}]}],"type":"step","runtimePreview":"signInView4-6.png","media":null},{"code":"SignInView6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that we‚Äôve done all of that, we can make the request to the api and store the access token. To do this, we‚Äôll use the "},{"type":"codeVoice","code":"HttpClient"},{"type":"text","text":" and the "},{"type":"codeVoice","code":"rootURL"},{"type":"text","text":" that I‚Äôve included in the application. This allows us to post to a url and decode the repsonse into a "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" object."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can‚Äôt make the request from the View without wrapping it in a "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" block. This allows asynchronous code to execute."}]}],"type":"step","runtimePreview":"signInView4-6.png","media":null},{"code":"SignInView7-1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Once sign in is complete, we‚Äôll need to react to that completion. To do that, add another state variable named "},{"type":"codeVoice","code":"didFinish"},{"type":"text","text":" up top."}]}],"caption":[],"type":"step","runtimePreview":"signInView7.1.png","media":null},{"code":"SignInView7-2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After we fetch the "},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":", toggle that value to true."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can present the ‚Äúhome‚Äù screen when that value changes."}]}],"type":"step","runtimePreview":"signInView7.1.png","media":null},{"code":"SignInView7-3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Here we‚Äôll use "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/form\/fullscreencover(ispresented:ondismiss:content:)"},{"type":"text","text":" instead of "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/form\/sheet(ispresented:ondismiss:content:)"},{"type":"text","text":". We don‚Äôt want the user to accidentally swipe away their session."}]}],"caption":[],"type":"step","runtimePreview":"signInView7.1.png","media":null},{"code":"ContentView12.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to actually use this in the app, you‚Äôll need to go back into "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" and update the presentation."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"ContentView13.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update line 32 to show the "},{"type":"codeVoice","code":"SignInView"},{"type":"text","text":" and you‚Äôre done with this view!"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scroll down a ways to create the "},{"type":"codeVoice","code":"SignUpView"},{"type":"text","text":"."}]}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Creating-the-Sign-Up-View","title":"Creating the Sign Up View","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we‚Äôll take our learnings from the sign in view and create the sign up view."}]}],"mediaPosition":"trailing","media":"swift.png"}],"stepsSection":[{"code":"SignUpView1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Like we did before, create a new file named "},{"type":"codeVoice","code":"SignUpView.swift"},{"type":"text","text":" and include this body content."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will be pretty similar, so we‚Äôre going to move a little quicker here. We‚Äôll start with the state variables we need."}]}],"type":"step","runtimePreview":"SignUpView1.png","media":null},{"code":"SignUpView2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This form will need a name, username, password, and a password validation field. To keep the code cleaner, we‚Äôll separate the form fields into a variable of its own."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After you‚Äôve done that, we‚Äôll style the text like we did for the Sign In View, add a "},{"type":"codeVoice","code":"Spacer"},{"type":"text","text":" and our form."}]}],"type":"step","runtimePreview":"SignUpView2.png","media":null},{"code":"SignUpView3-1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we‚Äôll add the button and the presentation."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We‚Äôll pretend the button works for now. Next up we‚Äôll create the sign up logic."}]}],"type":"step","runtimePreview":"SignUpView3.png","media":null},{"code":"SignUpView3-2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For sign up, we‚Äôll want to ensure that the user typed in the correct password. Let‚Äôs add that to the do, try, catch we need. From that guard block, we could throw an error instead of returning. This would allow us to tell the user they need to make a change to one of the password fields."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We‚Äôll come back and handle that later."}]}],"type":"step","runtimePreview":"SignUpView3.png","media":null},{"code":"SignUpView3-2-createuser.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that we‚Äôve verified they typed in the right password, we‚Äôre almost ready to make the request. We need to define the model that we‚Äôll send over the wire."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Generally, I‚Äôd recommed putting this in it‚Äôs own file. But I‚Äôm putting it here so we don‚Äôt get file whiplash in this tutorial."}]}],"type":"step","runtimePreview":"SignUpView3.png","media":null},{"code":"SignUpView3-3-signup.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The request is a simple post to the api which will encrypt the password and store it so we don‚Äôt need to here. This request alone isnt enough however, we still need to sign in to get an access token. Let‚Äôs replicate what we had in the Sign In View."}]}],"caption":[],"type":"step","runtimePreview":"SignUpView3.png","media":null},{"code":"SignUpView3-4-signin.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"I know this is making your skin crawl, but bear with me. We‚Äôll refactor this in the next chapter."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For now, lets replicate the sign in functionality here. We‚Äôll make the same request and store the access token just as we did before. After a successful sign up, you should see the Home view present itself."}]}],"type":"step","runtimePreview":"signInView7.2.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"The Presenter Pattern","abstract":[{"type":"text","text":"In this chapter we‚Äôll refactor the Sign in and Sign up views to use the Presenter pattern. This will allow us to reuse some of the code, and pull the business logic out of the view."}]}],"identifier":{"url":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Sign in and Sign up","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"Lean Coffee - iOS"},"hierarchy":{"modules":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Getting-started-with-SwiftUI","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started#Your-first-SwiftUI-View"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Authentication","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-in-View"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-Up-View"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/The-Presenter-Pattern","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#A-basic-Presenter"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#The-Sign-In-Presenter"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Loading-and-Errors","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#A-Loading-View"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#The-AsyncView"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Lists-and-Dependencies","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#A-laundry-list-of-things-to-do."},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#Dependency-injection"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/In-the-Topics","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-View"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-Presenter"}]}]},{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Create-New-Events-and-Topics","projects":[{"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics","sections":[{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Form-Submissions"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Lean-Coffee"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Topic"},{"kind":"task","reference":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#You-did-it!-%F0%9F%94%A5%E2%98%9D%EF%B8%8F"}]}]}],"reference":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Authentication"]]},"references":{"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics":{"role":"project","title":"Let there be Coffee","estimatedTime":"45min","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics"},"SignUpView1.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignUpView: View {","    @State var name = \"\"","    @State var username = \"\"","    @State var password = \"\"","    @State var passwordValidation = \"\"","    @State var didFinish = false","    ","    var body: some View {","        VStack {","            Text(\"Sign Up!\")","        }","    }","}"],"fileName":"SignUpView.swift","identifier":"SignUpView1.swift","type":"file","fileType":"swift","highlights":[]},"SignInView2.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","        }","    }","}"],"fileName":"SignInView.swift","identifier":"SignInView2.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":6},{"line":9}]},"SignInView7-1.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    @State var accessToken = \"\"","    @State var didFinish = false","    ","    func signIn() {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        Task {","            do {","                self.accessToken = try await HttpClient()","                    .post(","                        decodeReponse: AccessToken.self,","                        url: rootURL + \"\/users\/login\",","                        withHeaders: header","                    ).value","            } catch (let error) {","                print(error) \/\/ We'll handle this later","            }","        }","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signIn)","        }","        .padding()","    }","}","","struct AccessToken: Codable {","    let value: String","}"],"fileName":"SignInView.swift","identifier":"SignInView7-1.swift","type":"file","fileType":"swift","highlights":[{"line":7}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#Form-Submissions":{"role":"pseudoSymbol","title":"Form Submissions","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Form-Submissions","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#Form-Submissions"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Lists-and-Dependencies":{"role":"article","title":"Lists and Dependencies","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Lists-and-Dependencies","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/lists-and-dependencies"},"SignInView5-accessToken.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    @State var accessToken = \"\"","    ","    func signIn() {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signIn)","        }","        .padding()","    }","}","","struct AccessToken: Codable {","    let value: String","}"],"fileName":"SignInView.swift","identifier":"SignInView5-accessToken.swift","type":"file","fileType":"swift","highlights":[{"line":6},{"line":33},{"line":34},{"line":35},{"line":36}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#You-did-it!-%F0%9F%94%A5%E2%98%9D%EF%B8%8F":{"role":"pseudoSymbol","title":"You did it! üî•‚òùÔ∏è","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#You-did-it!-%F0%9F%94%A5%E2%98%9D%EF%B8%8F","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#You-did-it!-%25F0%259F%2594%25A5%25E2%2598%259D%25EF%25B8%258F"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Sign-in-and-Sign-up":{"role":"project","title":"Sign in and Sign up","estimatedTime":"20min","abstract":[{"type":"text","text":"Use the view from Chapter 1 to present a Sign in or Sign up form and log a user into the application."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/sign-in-and-sign-up"},"coffee-beans.png":{"alt":"Coffee Beans","type":"image","identifier":"coffee-beans.png","variants":[{"url":"\/images\/coffee-beans.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Create-New-Events-and-Topics":{"role":"article","title":"Create New Events and Topics","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Create-New-Events-and-Topics","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/create-new-events-and-topics"},"SignInView3.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","        }","    }","}"],"fileName":"SignInView.swift","identifier":"SignInView3.swift","type":"file","fileType":"swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Lean-Coffee-Topics#Creating-the-Lean-Coffee-View":{"role":"pseudoSymbol","title":"Creating the Lean Coffee View","abstract":[{"type":"text","text":"Learn how to crate custom list rows with swipe actions, sorting, and more."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/lean-coffee-topics#Creating-the-Lean-Coffee-View"},"ContentView12.swift":{"syntax":"swift","content":["","import SwiftUI","","struct ContentView: View {","    @State var signUp = false","    @State var signIn = false","    @Environment(\\.colorScheme) var colorScheme : ColorScheme","","    var overlay: some View {","        colorScheme == .dark ? Color.black : Color.white","    }","","    var body: some View {","        VStack(spacing: 16) {","            GeometryReader { bounds in","                Text(\"Lean Coffee\")","                    .font(.system(size: bounds.size.width > 600 ? 75 : 45))","                    .fontWeight(.black)","                    .kerning(2.5)","                    .shadow(color: .brown, radius: 15, x: 0, y: 0)","                    .frame(width: bounds.size.width)","            }","","            Spacer()","","            BoldButton(\"Sign Up\", action: { signUp.toggle() })","                .padding(.horizontal)","                .sheet(isPresented: $signUp) { Text(\"Sign Up Tapped\") }","","            Button(\"Sign In\", action: { signIn.toggle() })","                .padding() \/\/ increase visual and tappable area","                .sheet(isPresented: $signIn) { Text(\"Sign In Tapped\") }","        }.background(","            Image(\"coffee-beans\")","                .resizable()","                .aspectRatio(contentMode: .fill)","                .overlay(overlay.opacity(0.6))","                .edgesIgnoringSafeArea(.all)","        )","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","            .previewDevice(\"iPod touch (7th generation)\")","            .preferredColorScheme(.dark)","    }","}"],"fileName":"ContentView.swift","identifier":"ContentView12.swift","type":"file","fileType":"swift","highlights":[]},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Loading-and-Errors":{"role":"article","title":"Loading and Errors","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Loading-and-Errors","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/loading-and-errors"},"signInView7.2.png":{"alt":"The home view","type":"image","identifier":"signInView7.2.png","variants":[{"url":"\/images\/signInView7.2.png","traits":["1x","light"]}]},"signInView7.1.png":{"alt":"The sign in view","type":"image","identifier":"signInView7.1.png","variants":[{"url":"\/images\/signInView7.1.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Loading-and-Errors":{"role":"project","title":"Loading and Errors","estimatedTime":"25min","abstract":[{"type":"text","text":"There‚Äôs nothing worse than an app that doesn‚Äôt show loading states or errors‚Ä¶"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/loading-and-errors"},"signInView1.png":{"alt":"The sign in view","type":"image","identifier":"signInView1.png","variants":[{"url":"\/images\/signInView1.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Lean-Coffee-Topics":{"role":"project","title":"The Lean Coffee View","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"Learn how to crate custom list rows with swipe actions, sorting, and more."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/lean-coffee-topics"},"signInView2.png":{"alt":"The sign in view","type":"image","identifier":"signInView2.png","variants":[{"url":"\/images\/signInView2.png","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swiftui/form/sheet(ispresented:ondismiss:content:)":{"title":"sheet","titleInlineContent":[{"type":"codeVoice","code":"sheet"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/form\/sheet(ispresented:ondismiss:content:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/form\/sheet(ispresented:ondismiss:content:)"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Authentication":{"role":"article","title":"Authentication","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Authentication","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/authentication"},"swift.png":{"alt":"swift logo","type":"image","identifier":"swift.png","variants":[{"url":"\/images\/swift.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Lean-Coffee-Topics#Creating-the-Lean-Coffee-Presenter":{"role":"pseudoSymbol","title":"Creating the Lean Coffee Presenter","abstract":[{"type":"text","text":"Learn how to crate custom list rows with swipe actions, sorting, and more."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Lean-Coffee-Topics#Creating-the-Lean-Coffee-Presenter","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/lean-coffee-topics#Creating-the-Lean-Coffee-Presenter"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/List-View#Dependency-injection":{"role":"pseudoSymbol","title":"Dependency injection","abstract":[{"type":"text","text":"Create the list view of all the Lean Coffee Events and learn about Dependency Injection with SwiftUI."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#Dependency-injection","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/list-view#Dependency-injection"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/List-View#A-laundry-list-of-things-to-do.":{"role":"pseudoSymbol","title":"A laundry list of things to do.","abstract":[{"type":"text","text":"Create the list view of all the Lean Coffee Events and learn about Dependency Injection with SwiftUI."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View#A-laundry-list-of-things-to-do.","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/list-view#A-laundry-list-of-things-to-do."},"signInView3.png":{"alt":"The sign in view","type":"image","identifier":"signInView3.png","variants":[{"url":"\/images\/signInView3.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#Creating-a-Lean-Coffee":{"role":"pseudoSymbol","title":"Creating a Lean Coffee","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Lean-Coffee","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#Creating-a-Lean-Coffee"},"SignUpView3.png":{"alt":"The sign up view","type":"image","identifier":"SignUpView3.png","variants":[{"url":"\/images\/SignUpView3.png","traits":["1x","light"]}]},"SignUpView2.png":{"alt":"The sign up view","type":"image","identifier":"SignUpView2.png","variants":[{"url":"\/images\/SignUpView2.png","traits":["1x","light"]}]},"ContentView13.swift":{"syntax":"swift","content":["","import SwiftUI","","struct ContentView: View {","    @State var signUp = false","    @State var signIn = false","    @Environment(\\.colorScheme) var colorScheme : ColorScheme","","    var overlay: some View {","        colorScheme == .dark ? Color.black : Color.white","    }","","    var body: some View {","        VStack(spacing: 16) {","            GeometryReader { bounds in","                Text(\"Lean Coffee\")","                    .font(.system(size: bounds.size.width > 600 ? 75 : 45))","                    .fontWeight(.black)","                    .kerning(2.5)","                    .shadow(color: .brown, radius: 15, x: 0, y: 0)","                    .frame(width: bounds.size.width)","            }","","            Spacer()","","            BoldButton(\"Sign Up\", action: { signUp.toggle() })","                .padding(.horizontal)","                .sheet(isPresented: $signUp) { Text(\"Sign Up Tapped\") }","","            Button(\"Sign In\", action: { signIn.toggle() })","                .padding() \/\/ increase visual and tappable area","                .sheet(isPresented: $signIn) { SignInView() }","        }.background(","            Image(\"coffee-beans\")","                .resizable()","                .aspectRatio(contentMode: .fill)","                .overlay(overlay.opacity(0.6))","                .edgesIgnoringSafeArea(.all)","        )","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","            .previewDevice(\"iPod touch (7th generation)\")","            .preferredColorScheme(.dark)","    }","}"],"fileName":"ContentView.swift","identifier":"ContentView13.swift","type":"file","fileType":"swift","highlights":[{"line":32}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Presenter":{"role":"project","title":"The Presenter Pattern","estimatedTime":"35min","abstract":[{"type":"text","text":"In this chapter we‚Äôll refactor the Sign in and Sign up views to use the Presenter pattern. This will allow us to reuse some of the code, and pull the business logic out of the view."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/presenter"},"SignUpView3-4-signin.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignUpView: View {","    @State var name = \"\"","    @State var username = \"\"","    @State var password = \"\"","    @State var passwordValidation = \"\"","    @State var didFinish = false","    @State var accessToken = \"\"","    ","    func signUp() {","        Task {","            do {","                guard password == passwordValidation else { return }","                try await HttpClient()","                    .post(","                        body: CreateUser(name: name, username: username, password: password),","                        url: rootURL + \"\/users\"","                    )","                ","                guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","                    return","                }","                ","                let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        ","                self.accessToken = try await HttpClient()","                    .post(","                        decodeReponse: AccessToken.self,","                        url: rootURL + \"\/users\/login\",","                        withHeaders: header","                    ).value","                self.didFinish = true","            } catch(let error) {","                print(error)","            }","        }","    }","    ","    @ViewBuilder var form: some View {","        TextField(\"Name\", text: $name, prompt: Text(\"Name\"))","        TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","        ","        SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","        ","        SecureField(\"Confirm Password\", text: $passwordValidation, prompt: Text(\"Confirm Password\"))","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign Up!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            form","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signUp)","        }","        .padding()","        .fullScreenCover(isPresented: $didFinish) {","            Text(\"Home View\")","        }","    }","}"],"fileName":"SignUpView.swift","identifier":"SignUpView3-4-signin.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33}]},"https://developer.apple.com/documentation/swiftui/form/fullscreencover(ispresented:ondismiss:content:)":{"title":"fullScreenCover","titleInlineContent":[{"type":"codeVoice","code":"fullScreenCover"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/form\/fullscreencover(ispresented:ondismiss:content:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/form\/fullscreencover(ispresented:ondismiss:content:)"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/The-Presenter-Pattern":{"role":"article","title":"The Presenter Pattern","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/The-Presenter-Pattern","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/the-presenter-pattern"},"SignUpView2.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignUpView: View {","    @State var name = \"\"","    @State var username = \"\"","    @State var password = \"\"","    @State var passwordValidation = \"\"","    @State var didFinish = false","    ","    @ViewBuilder var form: some View {","        TextField(\"Name\", text: $name, prompt: Text(\"Name\"))","        TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","        ","        SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","        ","        SecureField(\"Confirm Password\", text: $passwordValidation, prompt: Text(\"Confirm Password\"))","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign Up!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            form","        }","    }","}"],"fileName":"SignUpView.swift","identifier":"SignUpView2.swift","type":"file","fileType":"swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]},"https://developer.apple.com/documentation/swiftui/securefield":{"title":"SecureField","titleInlineContent":[{"type":"codeVoice","code":"SecureField"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/securefield","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/securefield"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Getting-Started":{"role":"project","title":"Your first SwiftUI View","estimatedTime":"15min","abstract":[{"type":"text","text":"Create the landing page of the Lean Coffee application supporting iPhone, iPad, and darkmode."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/getting-started"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/Getting-started-with-SwiftUI":{"role":"article","title":"Getting started with SwiftUI","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/Getting-started-with-SwiftUI","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/getting-started-with-swiftui"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Presenter#The-Sign-In-Presenter":{"role":"pseudoSymbol","title":"The Sign In Presenter","abstract":[{"type":"text","text":"In this chapter we‚Äôll refactor the Sign in and Sign up views to use the Presenter pattern. This will allow us to reuse some of the code, and pull the business logic out of the view."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#The-Sign-In-Presenter","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/presenter#The-Sign-In-Presenter"},"SignUpView3-2-createuser.swift":{"syntax":"swift","content":["import SwiftUI","","struct CreateUser: Codable {","    let name: String","    let username: String","    let password: String","} \/\/ put this in its own file","","struct SignUpView: View {","    @State var name = \"\"","    @State var username = \"\"","    @State var password = \"\"","    @State var passwordValidation = \"\"","    @State var didFinish = false","    ","    func signUp() {","        Task {","            do {","                guard password == passwordValidation else { return }","            } catch(let error) {","                print(error)","            }","        }","    }","    ","    @ViewBuilder var form: some View {","        TextField(\"Name\", text: $name, prompt: Text(\"Name\"))","        TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","        ","        SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","        ","        SecureField(\"Confirm Password\", text: $passwordValidation, prompt: Text(\"Confirm Password\"))","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign Up!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            form","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: { didFinish.toggle() }) \/\/ pretend it works for now.","        }","        .padding()","        .fullScreenCover(isPresented: $didFinish) {","            Text(\"Home View\")","        }","    }","}"],"fileName":"SignUpView.swift","identifier":"SignUpView3-2-createuser.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8}]},"https://developer.apple.com/documentation/swiftui/textfield":{"title":"TextField","titleInlineContent":[{"type":"codeVoice","code":"TextField"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/textfield","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/textfield"},"SignUpView3-3-signup.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignUpView: View {","    @State var name = \"\"","    @State var username = \"\"","    @State var password = \"\"","    @State var passwordValidation = \"\"","    @State var didFinish = false","    ","    func signUp() {","        Task {","            do {","                guard password == passwordValidation else { return }","                try await HttpClient()","                    .post(","                        body: CreateUser(name: name, username: username, password: password),","                        url: rootURL + \"\/users\"","                    )","            } catch(let error) {","                print(error)","            }","        }","    }","    ","    @ViewBuilder var form: some View {","        TextField(\"Name\", text: $name, prompt: Text(\"Name\"))","        TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","        ","        SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","        ","        SecureField(\"Confirm Password\", text: $passwordValidation, prompt: Text(\"Confirm Password\"))","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign Up!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            form","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signUp)","        }","        .padding()","        .fullScreenCover(isPresented: $didFinish) {","            Text(\"Home View\")","        }","    }","}"],"fileName":"SignUpView.swift","identifier":"SignUpView3-3-signup.swift","type":"file","fileType":"swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":44}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Sign-in-and-Sign-up#Creating-the-Sign-in-View":{"role":"pseudoSymbol","title":"Creating the Sign in View","abstract":[{"type":"text","text":"Use the view from Chapter 1 to present a Sign in or Sign up form and log a user into the application."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-in-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/sign-in-and-sign-up#Creating-the-Sign-in-View"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/List-View":{"role":"project","title":"Create the List View and understand Swift's flavor of Dependency Injection","estimatedTime":"35min","abstract":[{"type":"text","text":"Create the list view of all the Lean Coffee Events and learn about Dependency Injection with SwiftUI."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/List-View","kind":"project","type":"topic","url":"\/tutorials\/leancoffeeapp\/list-view"},"SignInView4.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: {}) \/\/ Call the api","        }","        .padding()","    }","}"],"fileName":"SignInView.swift","identifier":"SignInView4.swift","type":"file","fileType":"swift","highlights":[{"line":18},{"line":19},{"line":21}]},"SignUpView3-2.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignUpView: View {","    @State var name = \"\"","    @State var username = \"\"","    @State var password = \"\"","    @State var passwordValidation = \"\"","    @State var didFinish = false","    ","    func signUp() {","        Task {","            do {","                guard password == passwordValidation else { return }","            } catch(let error) {","                print(error)","            }","        }","    }","    ","    @ViewBuilder var form: some View {","        TextField(\"Name\", text: $name, prompt: Text(\"Name\"))","        TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","        ","        SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","        ","        SecureField(\"Confirm Password\", text: $passwordValidation, prompt: Text(\"Confirm Password\"))","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign Up!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            form","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: { didFinish.toggle() }) \/\/ pretend it works for now.","        }","        .padding()","        .fullScreenCover(isPresented: $didFinish) {","            Text(\"Home View\")","        }","    }","}"],"fileName":"SignUpView.swift","identifier":"SignUpView3-2.swift","type":"file","fileType":"swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19}]},"SignInView5.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    ","    func signIn() {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signIn)","        }","        .padding()","    }","}"],"fileName":"SignInView.swift","identifier":"SignInView5.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":27}]},"signInView4-6.png":{"alt":"The sign in view","type":"image","identifier":"signInView4-6.png","variants":[{"url":"\/images\/signInView4-6.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents":{"role":"overview","title":"Lean Coffee","abstract":[{"type":"text","text":"Create a Lean Coffee app for iOS! Create lean coffee events, topics, and votes without the pens or sticky notes!"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-table-of-contents"},"SignInView1.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","","    var body: some View {","        VStack {","            Text(\"Sign In!\")","        }","    }","}"],"fileName":"SignInView.swift","identifier":"SignInView1.swift","type":"file","fileType":"swift","highlights":[]},"SignInView7-3.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    @State var accessToken = \"\"","    @State var didFinish = false","    ","    func signIn() {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        Task {","            do {","                self.accessToken = try await HttpClient()","                    .post(","                        decodeReponse: AccessToken.self,","                        url: rootURL + \"\/users\/login\",","                        withHeaders: header","                    ).value","                self.didFinish = true","            } catch (let error) {","                print(error) \/\/ We'll handle this later","            }","        }","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signIn)","        }","        .padding()","        .fullScreenCover(isPresented: $didFinish) {","            Text(\"Home view\")","        }","    }","}","","struct AccessToken: Codable {","    let value: String","}"],"fileName":"SignInView.swift","identifier":"SignInView7-3.swift","type":"file","fileType":"swift","highlights":[{"line":45},{"line":46},{"line":47}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/New-Lean-Coffee-Events-and-Topics#Creating-a-Topic":{"role":"pseudoSymbol","title":"Creating a Topic","abstract":[{"type":"text","text":"In this chapter we‚Äôll finish implementing the application‚Äôs core functionality by allowing the user to create Lean Coffee events and their topics."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/New-Lean-Coffee-Events-and-Topics#Creating-a-Topic","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/new-lean-coffee-events-and-topics#Creating-a-Topic"},"SignUpView3-1.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignUpView: View {","    @State var name = \"\"","    @State var username = \"\"","    @State var password = \"\"","    @State var passwordValidation = \"\"","    @State var didFinish = false","    ","    @ViewBuilder var form: some View {","        TextField(\"Name\", text: $name, prompt: Text(\"Name\"))","        TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","        ","        SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","        ","        SecureField(\"Confirm Password\", text: $passwordValidation, prompt: Text(\"Confirm Password\"))","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign Up!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            form","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: { didFinish.toggle() }) \/\/ pretend it works for now.","        }","        .padding()","        .fullScreenCover(isPresented: $didFinish) {","            Text(\"Home View\")","        }","    }","}"],"fileName":"SignUpView.swift","identifier":"SignUpView3-1.swift","type":"file","fileType":"swift","highlights":[{"line":26},{"line":27},{"line":28},{"line":29},{"line":31},{"line":32},{"line":33},{"line":34}]},"SignUpView1.png":{"alt":"The sign up view","type":"image","identifier":"SignUpView1.png","variants":[{"url":"\/images\/SignUpView1.png","traits":["1x","light"]}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Loading-and-Errors#The-AsyncView":{"role":"pseudoSymbol","title":"The AsyncView","abstract":[{"type":"text","text":"There‚Äôs nothing worse than an app that doesn‚Äôt show loading states or errors‚Ä¶"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#The-AsyncView","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/loading-and-errors#The-AsyncView"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Presenter#A-basic-Presenter":{"role":"pseudoSymbol","title":"A basic Presenter","abstract":[{"type":"text","text":"In this chapter we‚Äôll refactor the Sign in and Sign up views to use the Presenter pattern. This will allow us to reuse some of the code, and pull the business logic out of the view."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Presenter#A-basic-Presenter","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/presenter#A-basic-Presenter"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Getting-Started#Your-first-SwiftUI-View":{"role":"pseudoSymbol","title":"Your first SwiftUI View","abstract":[{"type":"text","text":"Create the landing page of the Lean Coffee application supporting iPhone, iPad, and darkmode."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Getting-Started#Your-first-SwiftUI-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/getting-started#Your-first-SwiftUI-View"},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Loading-and-Errors#A-Loading-View":{"role":"pseudoSymbol","title":"A Loading View","abstract":[{"type":"text","text":"There‚Äôs nothing worse than an app that doesn‚Äôt show loading states or errors‚Ä¶"}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Loading-and-Errors#A-Loading-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/loading-and-errors#A-Loading-View"},"SignInView7-2.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    @State var accessToken = \"\"","    @State var didFinish = false","    ","    func signIn() {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        Task {","            do {","                self.accessToken = try await HttpClient()","                    .post(","                        decodeReponse: AccessToken.self,","                        url: rootURL + \"\/users\/login\",","                        withHeaders: header","                    ).value","                self.didFinish = true","            } catch (let error) {","                print(error) \/\/ We'll handle this later","            }","        }","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signIn)","        }","        .padding()","    }","}","","struct AccessToken: Codable {","    let value: String","}"],"fileName":"SignInView.swift","identifier":"SignInView7-2.swift","type":"file","fileType":"swift","highlights":[{"line":23}]},"doc://LeanCoffeeApp/tutorials/LeanCoffeeApp/Sign-in-and-Sign-up#Creating-the-Sign-Up-View":{"role":"pseudoSymbol","title":"Creating the Sign Up View","abstract":[{"type":"text","text":"Use the view from Chapter 1 to present a Sign in or Sign up form and log a user into the application."}],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/LeanCoffeeApp\/Sign-in-and-Sign-up#Creating-the-Sign-Up-View","kind":"section","type":"section","url":"\/tutorials\/leancoffeeapp\/sign-in-and-sign-up#Creating-the-Sign-Up-View"},"doc://LeanCoffeeApp/tutorials/Tutorial-Table-of-Contents/In-the-Topics":{"role":"article","title":"In the Topics","abstract":[],"identifier":"doc:\/\/LeanCoffeeApp\/tutorials\/Tutorial-Table-of-Contents\/In-the-Topics","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/in-the-topics"},"SignInView6.swift":{"syntax":"swift","content":["import SwiftUI","","struct SignInView: View {","    @State var username = \"\"","    @State var password = \"\"","    @State var accessToken = \"\"","    ","    func signIn() {","        guard let token = \"\\(username):\\(password)\".data(using: .utf8) else {","            return","        }","        ","        let header = [\"Authorization\" : \"Basic \" + token.base64EncodedString()]","        Task {","            do {","                self.accessToken = try await HttpClient()","                    .post(","                        decodeReponse: AccessToken.self,","                        url: rootURL + \"\/users\/login\",","                        withHeaders: header","                    ).value","            } catch (let error) {","                print(error) \/\/ We'll handle this later","            }","        }","    }","    ","    var body: some View {","        VStack {","            Text(\"Sign In!\").font(.title).fontWeight(.black)","            ","            Spacer()","            ","            TextField(\"Username\", text: $username, prompt: Text(\"Username\"))","            ","            SecureField(\"Password\", text: $password, prompt: Text(\"Password\"))","            ","            Spacer()","            ","            BoldButton(\"Submit\", action: signIn)","        }","        .padding()","    }","}","","struct AccessToken: Codable {","    let value: String","}"],"fileName":"SignInView.swift","identifier":"SignInView6.swift","type":"file","fileType":"swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]}}}